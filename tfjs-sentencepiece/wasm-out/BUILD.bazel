load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("//tfjs-backend-wasm/scripts:create_worker_module.bzl", "create_worker_module")
load("//tfjs-backend-wasm/scripts:patch_threaded_simd_module.bzl", "patch_threaded_simd_module")
load("//tools:copy_to_dist.bzl", "copy_to_dist")
load("//tools:get_extension.bzl", "get_extension")

package(default_visibility = ["//visibility:public"])

copy_to_dist(
    name = "copy_wasm",
    srcs = [
        "//tfjs-sentencepiece/src:tfjs-sentencepiece",
    ],
    dest_dir = ".",
    root = "../src/tfjs-sentencepiece",
)

filegroup(
    name = "wasm_types",
    srcs = glob(["*.d.ts"]),
)

# This target selects the file extensions that should end up in the
# wasm-out directory in the npm package.
get_extension(
    name = "wasm_for_dist",
    srcs = [
        ":copy_wasm",
    ],
    include = [
        ".js",
        ".cjs",
        ".wasm",
    ],
    exclude = [
        ".fetch.js",
        ".debug.wasm",
    ],
)

js_library(
    name = "wasm-out_lib",
    package_name = "@tensorflow/tfjs-sentencepiece/wasm-out",
    srcs = [
        ":wasm_for_dist",
        ":wasm_types",
    ],
    deps = [
        "@npm//@types/emscripten",
    ],
)

filegroup(
    name = "wasm-out",
    srcs = [
        ":wasm_for_dist",
        ":wasm_types",
    ],
)
